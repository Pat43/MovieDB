package dao;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Hibernate;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;

import util.HibernateUtil;
import model.Genre;
import model.Genre;

/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is the object class that relates to the genre table.
 * Any customizations belong here.
 */
public class GenreDAO {
	
	
	public Genre getById(int id) {
		Session session = HibernateUtil.getSessionFactory().openSession();
		Transaction transaction = null;
		Genre genre = null;
		try {
			transaction = session.beginTransaction();
			genre = (Genre) session.get(Genre.class, id);
			transaction.commit();
		}catch(HibernateException he) {
			he.printStackTrace();
		}finally {
			if(session != null) {
				try { 
					session.close(); 
				} catch(HibernateException he){
					he.printStackTrace();
					}
			}
		}
		return genre;
	}
	
	@SuppressWarnings("unchecked")
	public List<Genre> getAll() {
		Session session = HibernateUtil.getSessionFactory().openSession();
		Transaction transaction = null;
		List<Genre> genres = null;
		try {
			transaction = session.beginTransaction();
			Query query = session.createQuery("from Genre");
			genres = query.list();
			
			transaction.commit();
		}catch(HibernateException he) {
			he.printStackTrace();
		}finally {
			if(session != null) {
				try { 
					session.close(); 
				} catch(HibernateException he){
					he.printStackTrace();
					}
			}
		}
		return genres;
	}
	
	@SuppressWarnings("unchecked")
	public List<Genre> findByName(String genreName){
		Session session = HibernateUtil.getSessionFactory().openSession();
		Transaction transaction = null;
		List<Genre> genres = null;
		try {
			transaction = session.beginTransaction();
			
			Criteria criteria = session.createCriteria(Genre.class);
			criteria.add(Restrictions.like("name", "%"+genreName+"%"));
			
			genres = criteria.list();
			
			transaction.commit();
			
		}catch(HibernateException he) {
			he.printStackTrace();
		}finally {
			if(session != null) {
				try { 
					session.close(); 
				} catch(HibernateException he){
					he.printStackTrace();
					}
			}
		}
		return genres;
		
	}
}